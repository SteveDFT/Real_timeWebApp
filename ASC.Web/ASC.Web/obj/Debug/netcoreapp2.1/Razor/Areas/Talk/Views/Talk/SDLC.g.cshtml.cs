#pragma checksum "C:\Users\Strok\source\repos\talk\Real_timeWebApp\ASC.Web\ASC.Web\Areas\Talk\Views\Talk\SDLC.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "fdf1414237d4672dd6c1fb01ff4dff26a3d5a010"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Talk_Views_Talk_SDLC), @"mvc.1.0.view", @"/Areas/Talk/Views/Talk/SDLC.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Areas/Talk/Views/Talk/SDLC.cshtml", typeof(AspNetCore.Areas_Talk_Views_Talk_SDLC))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fdf1414237d4672dd6c1fb01ff4dff26a3d5a010", @"/Areas/Talk/Views/Talk/SDLC.cshtml")]
    public class Areas_Talk_Views_Talk_SDLC : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(121, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(130, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 7 "C:\Users\Strok\source\repos\talk\Real_timeWebApp\ASC.Web\ASC.Web\Areas\Talk\Views\Talk\SDLC.cshtml"
  
    Layout = "_TalkLayout";

#line default
#line hidden
            BeginContext(168, 4, true);
            WriteLiteral("\r\n\r\n");
            EndContext();
            BeginContext(223, 2162, true);
            WriteLiteral(@"    <div class=""container"">
        <h1>How does a software project work ?</h1>
        <a onclick=""calltoast()"" class=""btn btn"">Key terms</a>
        <ul class=""collapsible"">
            <li>
                <div class=""collapsible-header""><i class=""material-icons"">filter_drama</i>Step 1</div>
                <div class=""collapsible-body""><span>Someone has something they want todo differently.</span></div>
            </li>
            <li>
                <div class=""collapsible-header""><i class=""material-icons"">place</i>Step 2</div>
                <div class=""collapsible-body""><span>We analyse what they do and what they want to acheive.</span></div>
            </li>
            <li>
                <div class=""collapsible-header""><i class=""material-icons"">whatshot</i>Step 3</div>
                <div class=""collapsible-body""><span>We present solutions.</span></div>
            </li>
            <li>
                <div class=""collapsible-header""><i class=""material-icons"">accessibility</");
            WriteLiteral(@"i>Step 4</div>
                <div class=""collapsible-body""><span>We build a soliution.</span></div>
            </li>
            <li>
                <div class=""collapsible-header""><i class=""material-icons"">add_shopping_cart</i>Step 5</div>
                <div class=""collapsible-body""><span>Check we've got it right.</span></div>
            </li>
            <li>
                <div class=""collapsible-header""><i class=""material-icons"">airplay</i>Step 6</div>
                <div class=""collapsible-body""><span>We start the process again.</span></div>
            </li>
        </ul>
    </div>
<script>

    $(document).ready(function ()
    {
        $('.collapsible').collapsible();
    });

    function calltoast()
    {
        var terms = [""Iteration"", ""MVP"", ""Agile"", ""Product owner"", ""KanBan"", ""Business analysis"", ""User research""];

        //terms.forEach(displaytoast);

        for (var i = 0; i < terms.length; i++)
        {
            displaytoast(terms[i]);
        }");
            WriteLiteral("\r\n        \r\n    }\r\n\r\n    function displaytoast(term)\r\n    {\r\n        M.toast({ html: term});\r\n    }\r\n\r\n</script>\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
